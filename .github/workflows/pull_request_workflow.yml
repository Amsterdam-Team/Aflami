name: Pull Requests

on:
  pull_request:
    branches: [ develop, main ]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: gradle
          
      - name: Load Google Service file
        env:
          DATA: ${{ secrets.FIREBASE_JSON }}
        run: echo $DATA | base64 -di > app/google-services.json    

      - name: Grant execute permissions for gradlew
        run: chmod +x gradlew
        
      - name: Clean Project
        run: ./gradlew clean

      - name: Compile Project
        run: ./gradlew assemble

      - name: Run Unit Tests
        run: ./gradlew test
  
      - name: Comment on coverage for current branch
        if: github.event_name == 'pull_request' && github.base_ref == 'develop'
        uses: madrapps/jacoco-report@v1.7.1
        with:
          paths: |
            build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.CI_GITHUB_TOKEN }}  
          min-coverage-overall: 80
          min-coverage-changed-files: 80
          update-comment: true
          title: "üõ°Ô∏è Code Coverage Report"
          check-for-current-branch: true
          coverage-counter-type: LINE,INSTRUCTION,BRANCH,METHOD,CLASS
          include-all-sources: true
          debug-mode: true
          fail-if-coverage-less: true
          fail-on-coverage-violation: true
          failure-message: "Code coverage is currently at {coverage}%. Target is 80%."
          success-message: "‚úÖ Code coverage is at {coverage}%."
          report-on-status: true

      - name: Build APK
        run: ./gradlew assembleDebug

      - name: Upload APK to Firebase App Distribution
        run: |
          npm install -g firebase-tools
          firebase appdistribution:distribute \
            app/build/outputs/apk/debug/app-debug.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --token ${{ secrets.FIREBASE_AUTH_TOKEN }} \
            --groups ${{ secrets.TESTER_GROUP }}
